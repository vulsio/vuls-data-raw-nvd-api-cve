{
	"id": "CVE-2022-46337",
	"sourceIdentifier": "security@apache.org",
	"vulnStatus": "Awaiting Analysis",
	"published": "2023-11-20T09:15:07.180",
	"lastModified": "2023-11-20T15:04:56.147",
	"descriptions": [
		{
			"lang": "en",
			"value": "A cleverly devised username might bypass LDAP authentication checks. In \nLDAP-authenticated Derby installations, this could let an attacker fill \nup the disk by creating junk Derby databases. In LDAP-authenticated \nDerby installations, this could also allow the attacker to execute \nmalware which was visible to and executable by the account which booted \nthe Derby server. In LDAP-protected databases which weren't also \nprotected by SQL GRANT/REVOKE authorization, this vulnerability could \nalso let an attacker view and corrupt sensitive data and run sensitive \ndatabase functions and procedures.\n\nMitigation:\n\nUsers should upgrade to Java 21 and Derby 10.17.1.0.\n\nAlternatively, users who wish to remain on older Java versions should \nbuild their own Derby distribution from one of the release families to \nwhich the fix was backported: 10.16, 10.15, and 10.14. Those are the \nreleases which correspond, respectively, with Java LTS versions 17, 11, \nand 8.\n\n"
		},
		{
			"lang": "es",
			"value": "Un nombre de usuario inteligentemente diseñado podría omitir las comprobaciones de autenticación LDAP. En instalaciones Derby autenticadas por LDAP, esto podría permitir que un atacante llene el disco creando bases de datos Derby basura. En instalaciones de Derby autenticadas por LDAP, esto también podría permitir al atacante ejecutar malware que era visible y ejecutable por la cuenta que arrancó el servidor Derby. En bases de datos protegidas por LDAP que tampoco estaban protegidas por la autorización SQL GRANT/REVOKE, esta vulnerabilidad también podría permitir que un atacante vea y corrompa datos confidenciales y ejecute funciones y procedimientos de bases de datos confidenciales. Mitigación: los usuarios deben actualizar a Java 21 y Derby 10.17.1.0. Alternativamente, los usuarios que deseen permanecer en versiones anteriores de Java deben crear su propia distribución Derby a partir de una de las familias de versiones a las que se admitió la solución: 10.16, 10.15 y 10.14. Esas son las versiones que corresponden, respectivamente, a las versiones 17, 11 y 8 de Java LTS."
		}
	],
	"references": [
		{
			"source": "security@apache.org",
			"url": "https://lists.apache.org/thread/q23kvvtoohgzwybxpwozmvvk17rp0td3"
		}
	],
	"metrics": {}
}
