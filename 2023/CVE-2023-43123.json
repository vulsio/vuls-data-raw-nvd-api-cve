{
	"id": "CVE-2023-43123",
	"sourceIdentifier": "security@apache.org",
	"vulnStatus": "Awaiting Analysis",
	"published": "2023-11-23T10:15:07.727",
	"lastModified": "2023-11-24T15:24:57.673",
	"descriptions": [
		{
			"lang": "en",
			"value": "On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems.\n\nThe method File.createTempFile on unix-like systems creates a file with predefined name (so easily identifiable) and by default will create this file with the permissions -rw-r--r--. Thus, if sensitive information is written to this file, other local users can read this information.\n\nFile.createTempFile(String, String) will create a temporary file in the system temporary directory if the 'java.io.tmpdir' system property is not explicitly set. \n\nThis affects the class  https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java#L99  and was introduced by  https://issues.apache.org/jira/browse/STORM-3123 \n\nIn practice, this has a very limited impact as this class is used only if ui.disable.spout.lag.monitoring\n\n is set to false, but its value is true by default.\nMoreover, the temporary file gets deleted soon after its creation.\n\nThe solution is to use  Files.createTempFile https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)  instead.\n\nWe recommend that all users upgrade to the latest version of Apache Storm.\n\n"
		},
		{
			"lang": "es",
			"value": "En sistemas tipo Unix, el directorio temporal se comparte entre todos los usuarios. Como tal, escribir en este directorio utilizando API que no establecen explícitamente los permisos de archivo/directorio puede dar lugar a la divulgación de información. Es de destacar que esto no afecta a los sistemas operativos MacOS modernos. El método File.createTempFile en sistemas tipo Unix crea un archivo con un nombre predefinido (fácilmente identificable) y, de forma predeterminada, creará este archivo con los permisos -rw-r--r--. Por lo tanto, si se escribe información confidencial en este archivo, otros usuarios locales pueden leer esta información. File.createTempFile(String, String) creará un archivo temporal en el directorio temporal del sistema si la propiedad del sistema 'java.io.tmpdir' no está configurada explícitamente. Esto afecta a la clase https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java#L99 y fue introducido por https://issues.apache.org/jira/browse/STORM-3123 En la práctica, esto tiene un impacto muy limitado ya que esta clase se usa solo si ui.disable.spout.lag.monitoring está configurado en falso, pero su valor es verdadero de forma predeterminada. Además, el archivo temporal se elimina poco después de su creación. La solución es utilizar Files.createTempFile https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...) en su lugar. Recomendamos que todos los usuarios actualicen a la última versión de Apache Storm."
		}
	],
	"references": [
		{
			"source": "security@apache.org",
			"url": "http://www.openwall.com/lists/oss-security/2023/11/23/1"
		},
		{
			"source": "security@apache.org",
			"url": "https://lists.apache.org/thread/88oc1vqfjtr29cz5xts0v2wm5pmhbm0l"
		}
	],
	"metrics": {},
	"weaknesses": [
		{
			"source": "security@apache.org",
			"type": "Primary",
			"description": [
				{
					"lang": "en",
					"value": "CWE-200"
				}
			]
		}
	]
}
