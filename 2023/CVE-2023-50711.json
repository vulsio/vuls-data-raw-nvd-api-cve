{
	"id": "CVE-2023-50711",
	"sourceIdentifier": "security-advisories@github.com",
	"vulnStatus": "Received",
	"published": "2024-01-02T20:15:10.250",
	"lastModified": "2024-01-02T20:15:10.250",
	"descriptions": [
		{
			"lang": "en",
			"value": "vmm-sys-util is a collection of modules that provides helpers and utilities used by multiple rust-vmm components. Starting in version 0.5.0 and prior to version 0.12.0, an issue in the `FamStructWrapper::deserialize` implementation provided by the crate for `vmm_sys_util::fam::FamStructWrapper` can lead to out of bounds memory accesses. The deserialization does not check that the length stored in the header matches the flexible array length. Mismatch in the lengths might allow out of bounds memory access through Rust-safe methods. The issue was corrected in version 0.12.0 by inserting a check that verifies the lengths of compared flexible arrays are equal for any deserialized header and aborting deserialization otherwise. Moreover, the API was changed so that header length can only be modified through Rust-unsafe code. This ensures that users cannot trigger out-of-bounds memory access from Rust-safe code."
		},
		{
			"lang": "es",
			"value": "vmm-sys-util es una colección de módulos que proporciona ayudas y utilidades utilizadas por múltiples componentes de Rust-VMM. A partir de la versión 0.5.0 y antes de la versión 0.12.0, un problema en la implementación de `FamStructWrapper::deserialize` proporcionada por la caja para `vmm_sys_util::fam::FamStructWrapper` puede provocar accesos a la memoria fuera de los límites. La deserialización no verifica que la longitud almacenada en el encabezado coincida con la longitud de la matriz flexible. La falta de coincidencia en las longitudes podría permitir el acceso a la memoria fuera de los límites a través de métodos seguros para Rust. El problema se corrigió en la versión 0.12.0 insertando una verificación que verifica que las longitudes de las matrices flexibles comparadas sean iguales para cualquier encabezado deserializado y, en caso contrario, abortando la deserialización. Además, la API se cambió para que la longitud del encabezado solo se pueda modificar mediante código no seguro para Rust. Esto garantiza que los usuarios no puedan activar el acceso a la memoria fuera de los límites desde el código seguro para Rust."
		}
	],
	"references": [
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/rust-vmm/vmm-sys-util/commit/30172fca2a8e0a38667d934ee56682247e13f167"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/rust-vmm/vmm-sys-util/security/advisories/GHSA-875g-mfp6-g7f9"
		}
	],
	"metrics": {
		"cvssMetricV31": [
			{
				"source": "security-advisories@github.com",
				"type": "Secondary",
				"cvssData": {
					"version": "3.1",
					"vectorString": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L",
					"attackVector": "LOCAL",
					"attackComplexity": "LOW",
					"privilegesRequired": "NONE",
					"userInteraction": "NONE",
					"scope": "CHANGED",
					"confidentialityImpact": "NONE",
					"integrityImpact": "LOW",
					"availabilityImpact": "LOW",
					"baseScore": 5.7,
					"baseSeverity": "MEDIUM"
				},
				"exploitabilityScore": 2.5,
				"impactScore": 2.7
			}
		]
	},
	"weaknesses": [
		{
			"source": "security-advisories@github.com",
			"type": "Secondary",
			"description": [
				{
					"lang": "en",
					"value": "CWE-787"
				}
			]
		}
	]
}
