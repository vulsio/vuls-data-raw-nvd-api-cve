{
	"id": "CVE-2023-6129",
	"sourceIdentifier": "openssl-security@openssl.org",
	"vulnStatus": "Awaiting Analysis",
	"published": "2024-01-09T17:15:12.147",
	"lastModified": "2024-01-09T19:56:14.023",
	"descriptions": [
		{
			"lang": "en",
			"value": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications running\non PowerPC CPU based platforms if the CPU provides vector instructions.\n\nImpact summary: If an attacker can influence whether the POLY1305 MAC\nalgorithm is used, the application state might be corrupted with various\napplication dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL for\nPowerPC CPUs restores the contents of vector registers in a different order\nthan they are saved. Thus the contents of some of these vector registers\nare corrupted when returning to the caller. The vulnerable code is used only\non newer PowerPC processors supporting the PowerISA 2.07 instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However unless the compiler uses the vector registers for storing\npointers, the most likely consequence, if any, would be an incorrect result\nof some application dependent calculations or a crash leading to a denial of\nservice.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3. If this cipher is enabled on the server a malicious\nclient can influence whether this AEAD cipher is used. This implies that\nTLS server applications using OpenSSL can be potentially impacted. However\nwe are currently not aware of any concrete application that would be affected\nby this issue therefore we consider this a Low severity security issue."
		},
		{
			"lang": "es",
			"value": "Resumen del problema: la implementación POLY1305 MAC (código de autenticación de mensajes) contiene un error que podría dañar el estado interno de las aplicaciones que se ejecutan en plataformas basadas en CPU PowerPC si la CPU proporciona instrucciones vectoriales. Resumen del impacto: si un atacante puede influir en el uso del algoritmo MAC POLY1305, el estado de la aplicación podría corromperse con varias consecuencias dependientes de la aplicación. La implementación POLY1305 MAC (código de autenticación de mensajes) en OpenSSL para CPU PowerPC restaura el contenido de los registros vectoriales en un orden diferente al que se guardan. Por lo tanto, el contenido de algunos de estos registros vectoriales se corrompe cuando regresa al llamante. El código vulnerable se utiliza sólo en procesadores PowerPC más nuevos que admiten las instrucciones PowerISA 2.07. Las consecuencias de este tipo de corrupción del estado de la aplicación interna pueden ser diversas: desde ninguna consecuencia, si la aplicación que llama no depende en absoluto del contenido de los registros XMM no volátiles, hasta las peores consecuencias, donde el atacante podría obtener el control total de el proceso de solicitud. Sin embargo, a menos que el compilador utilice registros vectoriales para almacenar punteros, la consecuencia más probable, si la hubiera, sería un resultado incorrecto de algunos cálculos dependientes de la aplicación o una falla que provocaría una denegación de servicio. El algoritmo POLY1305 MAC se utiliza con mayor frecuencia como parte del algoritmo CHACHA20-POLY1305 AEAD (cifrado autenticado con datos asociados). El uso más común de este cifrado AEAD es con las versiones 1.2 y 1.3 del protocolo TLS. Si este cifrado está habilitado en el servidor, un cliente malicioso puede influir en si se utiliza este cifrado AEAD. Esto implica que las aplicaciones del servidor TLS que utilizan OpenSSL pueden verse potencialmente afectadas. Sin embargo, actualmente no conocemos ninguna aplicación concreta que pueda verse afectada por este problema, por lo que lo consideramos un problema de seguridad de gravedad baja."
		}
	],
	"references": [
		{
			"source": "openssl-security@openssl.org",
			"url": "http://www.openwall.com/lists/oss-security/2024/01/09/1"
		},
		{
			"source": "openssl-security@openssl.org",
			"url": "https://github.com/openssl/openssl/commit/050d26383d4e264966fb83428e72d5d48f402d35"
		},
		{
			"source": "openssl-security@openssl.org",
			"url": "https://github.com/openssl/openssl/commit/5b139f95c9a47a55a0c54100f3837b1eee942b04"
		},
		{
			"source": "openssl-security@openssl.org",
			"url": "https://github.com/openssl/openssl/commit/f3fc5808fe9ff74042d639839610d03b8fdcc015"
		},
		{
			"source": "openssl-security@openssl.org",
			"url": "https://www.openssl.org/news/secadv/20240109.txt"
		}
	],
	"metrics": {}
}
