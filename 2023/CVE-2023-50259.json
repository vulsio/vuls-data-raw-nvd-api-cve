{
	"id": "CVE-2023-50259",
	"sourceIdentifier": "security-advisories@github.com",
	"vulnStatus": "Awaiting Analysis",
	"published": "2023-12-22T17:15:09.747",
	"lastModified": "2023-12-22T20:32:34.333",
	"descriptions": [
		{
			"lang": "en",
			"value": "Medusa is an automatic video library manager for TV shows. Versions prior to 1.0.19 are vulnerable to unauthenticated blind server-side request forgery (SSRF). The `testslack` request handler in `medusa/server/web/home/handler.py` does not validate the user-controlled `slack_webhook` variable and passes it to the `notifiers.slack_notifier.test_notify` method, then `_notify_slack` and finally `_send_slack` method,  which sends a POST request to the user-controlled URL on line 103 in `/medusa/notifiers/slack.py`, which leads to a blind server-side request forgery (SSRF). This issue allows for crafting POST requests on behalf of the Medusa server. Version 1.0.19 contains a fix for the issue."
		},
		{
			"lang": "es",
			"value": "Medusa es un administrador automático de videoteca para programas de televisión. Las versiones anteriores a la 1.0.19 son vulnerables a blind server-side request forgery (SSRF) no autenticado. El controlador de solicitudes `testslack` en `medusa/server/web/home/handler.py` no valida la variable `slack_webhook` controlada por el usuario y la pasa al método `notifiers.slack_notifier.test_notify`, luego a `_notify_slack` y finalmente el método `_send_slack`, que envía una solicitud POST a la URL controlada por el usuario en la línea 103 en `/medusa/notifiers/slack.py`, lo que conduce a blind server-side request forgery (SSRF). Este problema permite manipular solicitudes POST en nombre del servidor Medusa. La versión 1.0.19 contiene una solución para el problema."
		}
	],
	"references": [
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/notifiers/slack.py#L103"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/pymedusa/Medusa/blob/3d656652ab277e47689483912ed7fc443e7023e8/medusa/server/web/home/handler.py#L168"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/pymedusa/Medusa/releases/tag/v1.0.19"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/pymedusa/Medusa/security/advisories/GHSA-8mcr-vffr-jwxv"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://securitylab.github.com/advisories/GHSL-2023-201_GHSL-2023-202_Medusa/"
		}
	],
	"metrics": {
		"cvssMetricV31": [
			{
				"source": "security-advisories@github.com",
				"type": "Secondary",
				"cvssData": {
					"version": "3.1",
					"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
					"attackVector": "NETWORK",
					"attackComplexity": "LOW",
					"privilegesRequired": "NONE",
					"userInteraction": "NONE",
					"scope": "UNCHANGED",
					"confidentialityImpact": "LOW",
					"integrityImpact": "NONE",
					"availabilityImpact": "NONE",
					"baseScore": 5.3,
					"baseSeverity": "MEDIUM"
				},
				"exploitabilityScore": 3.9,
				"impactScore": 1.4
			}
		]
	},
	"weaknesses": [
		{
			"source": "security-advisories@github.com",
			"type": "Primary",
			"description": [
				{
					"lang": "en",
					"value": "CWE-918"
				}
			]
		}
	]
}
