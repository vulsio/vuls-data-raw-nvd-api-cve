{
	"id": "CVE-2024-22419",
	"sourceIdentifier": "security-advisories@github.com",
	"vulnStatus": "Undergoing Analysis",
	"published": "2024-01-18T19:15:10.550",
	"lastModified": "2024-01-18T19:25:46.623",
	"descriptions": [
		{
			"lang": "en",
			"value": "Vyper is a Pythonic Smart Contract Language for the Ethereum Virtual Machine. The `concat` built-in can write over the bounds of the memory buffer that was allocated for it and thus overwrite existing valid data. The root cause is that the `build_IR` for `concat` doesn't properly adhere to the API of copy functions (for `>=0.3.2` the `copy_bytes` function). A contract search was performed and no vulnerable contracts were found in production. The buffer overflow can result in the change of semantics of the contract. The overflow is length-dependent and thus it might go unnoticed during contract testing. However, certainly not all usages of concat will result in overwritten valid data as we require it to be in an internal function and close to the return statement where other memory allocations don't occur. This issue has been addressed in commit `55e18f6d1` which will be included in future releases. Users are advised to update when possible."
		},
		{
			"lang": "es",
			"value": "Vyper es un lenguaje de contrato inteligente pitónico para la máquina virtual Ethereum. El `concat` integrado puede escribir sobre los límites del búfer de memoria que se le asignó y así sobrescribir los datos válidos existentes. La causa principal es que `build_IR` para `concat` no se adhiere correctamente a la API de funciones de copia (para `&gt;=0.3.2` la función `copy_bytes`). Se realizó una búsqueda de contratos y no se encontraron contratos vulnerables en producción. El desbordamiento de búfer puede provocar un cambio en la semántica del contrato. El desbordamiento depende de la longitud y, por lo tanto, puede pasar desapercibido durante las pruebas del contrato. Sin embargo, ciertamente no todos los usos de concat darán como resultado la sobrescritura de datos válidos, ya que requerimos que estén en una función interna y cerca de la declaración de devolución donde no ocurren otras asignaciones de memoria. Este problema se solucionó en el commit `55e18f6d1` que se incluirá en versiones futuras. Se recomienda a los usuarios que actualicen cuando sea posible."
		}
	],
	"references": [
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/vyperlang/vyper/commit/55e18f6d128b2da8986adbbcccf1cd59a4b9ad6f"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/vyperlang/vyper/issues/3737"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-2q8v-3gqq-4f8p"
		}
	],
	"metrics": {
		"cvssMetricV31": [
			{
				"source": "security-advisories@github.com",
				"type": "Secondary",
				"cvssData": {
					"version": "3.1",
					"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
					"attackVector": "NETWORK",
					"attackComplexity": "LOW",
					"privilegesRequired": "NONE",
					"userInteraction": "NONE",
					"scope": "UNCHANGED",
					"confidentialityImpact": "LOW",
					"integrityImpact": "LOW",
					"availabilityImpact": "LOW",
					"baseScore": 7.3,
					"baseSeverity": "HIGH"
				},
				"exploitabilityScore": 3.9,
				"impactScore": 3.4
			}
		]
	},
	"weaknesses": [
		{
			"source": "security-advisories@github.com",
			"type": "Primary",
			"description": [
				{
					"lang": "en",
					"value": "CWE-120"
				}
			]
		}
	]
}
