{
	"id": "CVE-2024-43783",
	"sourceIdentifier": "security-advisories@github.com",
	"vulnStatus": "Undergoing Analysis",
	"published": "2024-08-27T18:15:15.403",
	"lastModified": "2024-08-27T18:33:14.247",
	"descriptions": [
		{
			"lang": "en",
			"value": "The Apollo Router Core is a configurable, high-performance graph router written in Rust to run a federated supergraph that uses Apollo Federation 2. Instances of the Apollo Router running versions >=1.21.0 and < 1.52.1 are impacted by a denial of service vulnerability if _all_ of the following are true: 1. The Apollo Router has been configured to support [External Coprocessing](https://www.apollographql.com/docs/router/customizations/coprocessor). 2. The Apollo Router has been configured to send request bodies to coprocessors. This is a non-default configuration and must be configured intentionally by administrators. Instances of the Apollo Router running versions >=1.7.0 and <1.52.1 are impacted by a denial-of-service vulnerability if all of the following are true: 1. Router has been configured to use a custom-developed Native Rust Plugin. 2. The plugin accesses Request.router_request in the RouterService layer. 3. You are accumulating the body from Request.router_request into memory. If using an impacted configuration, the Router will load entire HTTP request bodies into memory without respect to other HTTP request size-limiting configurations like limits.http_max_request_bytes. This can cause the Router to be out-of-memory (OOM) terminated if a sufficiently large request is sent to the Router. By default, the Router sets limits.http_max_request_bytes to 2 MB. If you have an impacted configuration as defined above, please upgrade to at least Apollo Router 1.52.1. If you cannot upgrade, you can mitigate the denial-of-service opportunity impacting External Coprocessors by setting the coprocessor.router.request.body configuration option to false. Please note that changing this configuration option will change the information sent to any coprocessors you have configured and may impact functionality implemented by those coprocessors. If you have developed a Native Rust Plugin and cannot upgrade, you can update your plugin to either not accumulate the request body or enforce a maximum body size limit. You can also mitigate this issue by limiting HTTP body payload sizes prior to the Router (e.g., in a proxy or web application firewall appliance)."
		},
		{
			"lang": "es",
			"value": "Apollo Router Core es un enrutador de gráficos configurable y de alto rendimiento escrito en Rust para ejecutar un supergrafo federado que utiliza Apollo Federation 2. Las instancias del enrutador Apollo que ejecutan versiones &gt;=1.21.0 y &lt;1.52.1 se ven afectadas por una denegación de vulnerabilidad del servicio si _todo_ lo siguiente es verdadero: 1. El enrutador Apollo se ha configurado para admitir [coprocesamiento externo] (https://www.apollographql.com/docs/router/customizations/coprocessor). 2. El enrutador Apollo se ha configurado para enviar cuerpos de solicitud a los coprocesadores. Esta es una configuración no predeterminada y los administradores deben configurarla intencionalmente. Las instancias del enrutador Apollo que ejecutan las versiones &gt;=1.7.0 y &lt;1.52.1 se ven afectadas por una vulnerabilidad de denegación de servicio si se cumple todo lo siguiente: 1. El enrutador se ha configurado para utilizar un complemento Native Rust desarrollado a medida. 2. El complemento accede a Request.router_request en la capa RouterService. 3. Estás acumulando el cuerpo de Request.router_request en la memoria. Si utiliza una configuración afectada, el enrutador cargará cuerpos completos de solicitudes HTTP en la memoria sin respetar otras configuraciones que limitan el tamaño de las solicitudes HTTP, como limites.http_max_request_bytes. Esto puede provocar que el enrutador finalice por falta de memoria (OOM) si se envía una solicitud suficientemente grande al enrutador. De forma predeterminada, el enrutador establece límites.http_max_request_bytes en 2 MB. Si tiene una configuración afectada como se define anteriormente, actualice al menos a Apollo Router 1.52.1. Si no puede actualizar, puede mitigar la oportunidad de denegación de servicio que afecta a los coprocesadores externos configurando la opción de configuración coprocessor.router.request.body en falso. Tenga en cuenta que cambiar esta opción de configuración cambiará la información enviada a cualquier coprocesador que haya configurado y puede afectar la funcionalidad implementada por esos coprocesadores. Si ha desarrollado un complemento Native Rust y no puede actualizarlo, puede actualizar su complemento para no acumular el cuerpo de la solicitud o imponer un límite máximo de tamaño del cuerpo. También puede mitigar este problema limitando los tamaños de carga útil del cuerpo HTTP antes del enrutador (por ejemplo, en un proxy o dispositivo de firewall de aplicaciones web)."
		}
	],
	"references": [
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/apollographql/router/commit/7a9c020608a62dcaa306b72ed0f6980f15923b14"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/apollographql/router/releases/tag/v1.52.1"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://github.com/apollographql/router/security/advisories/GHSA-x6xq-whh3-gg32"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://www.apollographql.com/docs/router/configuration/overview/#request-limits"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://www.apollographql.com/docs/router/customizations/coprocessor"
		},
		{
			"source": "security-advisories@github.com",
			"url": "https://www.apollographql.com/docs/router/customizations/native"
		}
	],
	"metrics": {
		"cvssMetricV31": [
			{
				"source": "security-advisories@github.com",
				"type": "Secondary",
				"cvssData": {
					"version": "3.1",
					"vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
					"attackVector": "NETWORK",
					"attackComplexity": "LOW",
					"privilegesRequired": "NONE",
					"userInteraction": "NONE",
					"scope": "UNCHANGED",
					"confidentialityImpact": "NONE",
					"integrityImpact": "NONE",
					"availabilityImpact": "HIGH",
					"baseScore": 7.5,
					"baseSeverity": "HIGH"
				},
				"exploitabilityScore": 3.9,
				"impactScore": 3.6
			}
		]
	},
	"weaknesses": [
		{
			"source": "security-advisories@github.com",
			"type": "Secondary",
			"description": [
				{
					"lang": "en",
					"value": "CWE-770"
				}
			]
		}
	]
}
