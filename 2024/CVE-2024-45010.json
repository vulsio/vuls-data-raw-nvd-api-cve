{
	"id": "CVE-2024-45010",
	"sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
	"vulnStatus": "Undergoing Analysis",
	"published": "2024-09-11T16:15:06.483",
	"lastModified": "2024-09-11T16:26:11.920",
	"descriptions": [
		{
			"lang": "en",
			"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmptcp: pm: only mark 'subflow' endp as available\n\nAdding the following warning ...\n\n  WARN_ON_ONCE(msk->pm.local_addr_used == 0)\n\n... before decrementing the local_addr_used counter helped to find a bug\nwhen running the \"remove single address\" subtest from the mptcp_join.sh\nselftests.\n\nRemoving a 'signal' endpoint will trigger the removal of all subflows\nlinked to this endpoint via mptcp_pm_nl_rm_addr_or_subflow() with\nrm_type == MPTCP_MIB_RMSUBFLOW. This will decrement the local_addr_used\ncounter, which is wrong in this case because this counter is linked to\n'subflow' endpoints, and here it is a 'signal' endpoint that is being\nremoved.\n\nNow, the counter is decremented, only if the ID is being used outside\nof mptcp_pm_nl_rm_addr_or_subflow(), only for 'subflow' endpoints, and\nif the ID is not 0 -- local_addr_used is not taking into account these\nones. This marking of the ID as being available, and the decrement is\ndone no matter if a subflow using this ID is currently available,\nbecause the subflow could have been closed before."
		},
		{
			"lang": "es",
			"value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mptcp: pm: solo marcar el extremo 'subflow' como disponible Agregar la siguiente advertencia ... WARN_ON_ONCE(msk-&gt;pm.local_addr_used == 0) ... antes de decrementar el contador local_addr_used ayudó a encontrar un error al ejecutar la subprueba \"eliminar una sola dirección\" de las autopruebas mptcp_join.sh. Eliminar un extremo 'señal' activará la eliminación de todos los subflujos vinculados a este extremo a través de mptcp_pm_nl_rm_addr_or_subflow() con rm_type == MPTCP_MIB_RMSUBFLOW. Esto decrementará el contador local_addr_used, lo cual es incorrecto en este caso porque este contador está vinculado a extremos 'subflow', y aquí es un extremo 'señal' el que se está eliminando. Ahora, el contador se reduce solo si el ID se usa fuera de mptcp_pm_nl_rm_addr_or_subflow(), solo para los puntos finales de 'subflujo' y, si el ID no es 0, local_addr_used no los tiene en cuenta. Esto marca el ID como disponible y la reducción se realiza sin importar si un subflujo que usa este ID está disponible actualmente, porque el subflujo podría haberse cerrado antes."
		}
	],
	"references": [
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/322ea3778965da72862cca2a0c50253aacf65fe6"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/43cf912b0b0fc7b4fd12cbc735d1f5afb8e1322d"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/7fdc870d08960961408a44c569f20f50940e7d4f"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/9849cfc67383ceb167155186f8f8fe8a896b60b3"
		}
	],
	"metrics": {}
}
