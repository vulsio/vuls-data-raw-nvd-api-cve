{
	"id": "CVE-2024-42235",
	"sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
	"vulnStatus": "Undergoing Analysis",
	"published": "2024-08-07T16:15:46.460",
	"lastModified": "2024-08-07T19:09:46.290",
	"descriptions": [
		{
			"lang": "en",
			"value": "In the Linux kernel, the following vulnerability has been resolved:\n\ns390/mm: Add NULL pointer check to crst_table_free() base_crst_free()\n\ncrst_table_free() used to work with NULL pointers before the conversion\nto ptdescs.  Since crst_table_free() can be called with a NULL pointer\n(error handling in crst_table_upgrade() add an explicit check.\n\nAlso add the same check to base_crst_free() for consistency reasons.\n\nIn real life this should not happen, since order two GFP_KERNEL\nallocations will not fail, unless FAIL_PAGE_ALLOC is enabled and used."
		},
		{
			"lang": "es",
			"value": "En el kernel de Linux, se resolvió la siguiente vulnerabilidad: s390/mm: agregue verificación de puntero NULL a crst_table_free() base_crst_free() crst_table_free() solía trabajar con punteros NULL antes de la conversión a ptdescs. Dado que crst_table_free() se puede llamar con un puntero NULL (el manejo de errores en crst_table_upgrade() agrega una verificación explícita. También agregue la misma verificación a base_crst_free() por razones de coherencia. En la vida real, esto no debería suceder, ya que ordenar dos asignaciones GFP_KERNEL no falla, a menos que FAIL_PAGE_ALLOC esté habilitado y utilizado."
		}
	],
	"references": [
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/794fa52b94637d6b2e8c9474fbe3983af5c9f046"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/b5efb63acf7bddaf20eacfcac654c25c446eabe8"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/f80bd8bb6f380bc265834c46058d38b34174813e"
		}
	],
	"metrics": {}
}
