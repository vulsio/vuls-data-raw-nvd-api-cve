{
	"id": "CVE-2024-50157",
	"sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
	"vulnStatus": "Awaiting Analysis",
	"published": "2024-11-07T10:15:07.193",
	"lastModified": "2024-11-08T19:01:03.880",
	"descriptions": [
		{
			"lang": "en",
			"value": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/bnxt_re: Avoid CPU lockups due fifo occupancy check loop\n\nDriver waits indefinitely for the fifo occupancy to go below a threshold\nas soon as the pacing interrupt is received. This can cause soft lockup on\none of the processors, if the rate of DB is very high.\n\nAdd a loop count for FPGA and exit the __wait_for_fifo_occupancy_below_th\nif the loop is taking more time. Pacing will be continuing until the\noccupancy is below the threshold. This is ensured by the checks in\nbnxt_re_pacing_timer_exp and further scheduling the work for pacing based\non the fifo occupancy."
		},
		{
			"lang": "es",
			"value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: RDMA/bnxt_re: Evitar bloqueos de CPU debido al bucle de comprobación de ocupación fifo El controlador espera indefinidamente a que la ocupación fifo baje de un umbral tan pronto como se recibe la interrupción de ritmo. Esto puede provocar un bloqueo suave en uno de los procesadores, si la tasa de DB es muy alta. Agregue un recuento de bucles para FPGA y salga de __wait_for_fifo_occupancy_below_th si el bucle está tomando más tiempo. El ritmo continuará hasta que la ocupación esté por debajo del umbral. Esto se garantiza mediante las comprobaciones en bnxt_re_pacing_timer_exp y la programación adicional del trabajo para el ritmo en función de la ocupación fifo."
		}
	],
	"references": [
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/2fb6b2e82413e401b72dfeacd7a60416fcfc5b41"
		},
		{
			"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
			"url": "https://git.kernel.org/stable/c/8be3e5b0c96beeefe9d5486b96575d104d3e7d17"
		}
	],
	"metrics": {}
}
